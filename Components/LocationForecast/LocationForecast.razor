@using System.Text.Json
@using System.Text
@inject HttpClient Http
@inject IJSRuntime JSRuntime

@if (forecast != null)
{
    <section class="location-forecast mt-5" id="LocationForecast">
    <div class="row">
        <div class="col-12 col-md-3 offset-md-1">
            <div class="card forecast-card">
                <div class="card-body px-md-0">
                    <div class="card-body-title text-center">
                        <h4>@forecast.Location.Name, @forecast.Location.Region</h4>
                        <span class="text-secondary">@forecast.Location.Country</span>
                    </div>
                    <div class="forecast-content">
                        <div class="temperature-content forecast-content-section text-center mb-2">
                            <span class="current-temp">@forecast.Current.Temp_C</span><small class="deg">째C</small>
                            <span class="current-temp ms-3">@forecast.Current.Temp_F</span><small class="deg">째F</small>
                        </div>
                        <div class="forecast-content-section temperature-content feels-like text-center">
                            <span>Feels like <b>@forecast.Current.FeelsLike_C째C</b> |
                                <b>@forecast.Current.FeelsLike_F째F</b></span>
                        </div>
                        <hr>
                        <div class="forecast-content-section mb-1">
                            <span>@forecast.Location.FullDate</span>
                        </div>
                        <div class="forecast-content-section mb-1">
                            <img class="forecast-icon" src="@forecast.Current.Condition.Icon" />
                            <span>@forecast.Current.Condition.Text</span>
                        </div>
                        <div class="forecast-content-section">
                            <button class="icon-container btn btn-warning self-align-end px-1 py-0 me-2"
                                @onclick="ToggleFavoriteLocation">
                                <i class="bi bi-star-fill"></i>
                            </button>
                            @if (showMessage)
                                {
                                    <div class="alert alert-success py-1 px-1 me-1" role="alert">
                                        Location successfully saved!
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-7">
                <WeeklyForecast ForecastDays="@forecast.Forecast.Forecastday" />

                <TodaysHighlights Current="@forecast.Current" />
            </div>
        </div>
    </section>
}

@code {
    [Parameter] public int LocationId { get; set; }
    private WeatherForecast forecast;
    private bool showMessage = false;

    protected override async Task OnParametersSetAsync()
    {
        forecast = await
        Http.GetFromJsonAsync<WeatherForecast>($"http://api.weatherapi.com/v1/forecast.json?key=21e908cbbed84dbaae3223803240506&q=id:{LocationId}&days=3&aqi=no&alerts=no");
    }

    protected async void ToggleFavoriteLocation()
    {

        string userId = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "userId");
        object payload = new
        {
            CityId = LocationId,
            UserId = userId
        };
        await Http.PostAsJsonAsync("http://localhost:5073/api/locations", payload);
        await ShowMessage();
    }
    
    private async Task ShowMessage()
    {
        showMessage = true;
        StateHasChanged();

        await Task.Delay(3000); 
        showMessage = false;

        StateHasChanged();
    }
}