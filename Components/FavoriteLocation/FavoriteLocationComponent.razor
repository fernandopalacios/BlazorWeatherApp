@inject HttpClient Http
@inject RootSettings Settings

@if(forecast != null)
{
    <div class="card mb-3">
        <div class="card-body location-card d-flex align-items-center justify-content-between py-1">
            <h6 class="m-0">@forecast.Location.Name<small class="text-secondary ms-2">@forecast.Location.Region,
                    @forecast.Location.Country </small></h6>
            <div class="temperature">
                <span class="temperature">@forecast.Current.Temp_C °C </span>
                <span class="text-secondary temperature"> | @forecast.Current.Temp_F °F </span>
            </div>
            <img class="weather-icon" src="@forecast.Current.Condition.Icon" alt="">
            <i class="bi bi-x-circle delete-button"
                @onclick="() => DeleteLocation(forecast.Location.FavoriteLocationId)"></i>
        </div>
    </div>
}
@code
{
    [Parameter] public EventCallback<string> OnDeleteButtonClick { get; set; }
    [Parameter] public WeatherForecast forecast { get; set; }
    protected async Task DeleteLocation(int locationId)
    {
        if (locationId != 0)
        {
            await Http.DeleteAsync($"{Settings.AppSettings.LocalApiUrl}/locations/{locationId}");
            await OnDeleteButtonClick.InvokeAsync("Deleted");
        }
    }
}