@page "/weather"

@using BlazorWeatherApp.Components.LocationForecast
@inject HttpClient Http

<PageTitle>Weather</PageTitle>
<div class="container">
    <div class="row">
        <div class="col-12 col-md-10 offset-md-1">
            <div class="mb-2">
                <b>Search</b> | <NavLink href="favorite-locations">Favorites</NavLink>
            </div>
            <section class="search-section" id="SearchSection">
                <input @oninput="searchForLocation" type="text" name="location" id="location" class="search-input"
                    placeholder="Type a location..." autocomplete="off">
                <div class="results-container" tabindex="0" @onfocusout="@(() => locations = [])"
                    @ref="resultsContainer">
                    @if (locations != null)
                    {
                        @foreach (var location in locations)
                        {
                            <div class="search-result" @onclick="(()=> {selectedLocationId = location.Id; locations = [];})">
                                <span class="search-result-span id-span text-secondary">@location.Id</span><span
                                    class="search-result-span name-span m-3">@location.Name</span>
                                <small class="search-result-span text-secondary">@location.Region , @location.Country</small>
                            </div>
                        }
                    }
                </div>
            </section>
        </div>
    </div>
    @if (selectedLocationId != 0)
    {
        <LocationForecast LocationId="@selectedLocationId" />
    }
</div>

@code {
    ElementReference resultsContainer;
    private int selectedLocationId = 0;
    private Location[]? locations;

    public async Task searchForLocation(ChangeEventArgs e)
    {
        if (e.Value.ToString().Count() >= 3)
        {
            var searchLocation = e.Value.ToString();
            locations = await
            Http.GetFromJsonAsync<Location[]>($"http://api.weatherapi.com/v1/search.json?key=21e908cbbed84dbaae3223803240506&q={searchLocation}");

        }
        else
        {
            locations = [];
        }
    }
}
